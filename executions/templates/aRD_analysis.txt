%cohort_analysis){
	source ~soft_bio_267/initializes/init_pets
	?
	coPatReporter.rb -i $disease_hpo_file -p HPOID -d DiseaseID -C 20 -m $similarity_measure -o disease_clusters

	if [ ! -s disease_clusters.html ]; then 
		>&2 echo "Cohort analysis has failed"
		exit 1
	fi
}

%generate_clusters){
	reosurces -t '7-00:00:00' -m '100gb' -c 20
	source ~soft_bio_267/initializes/init_netanalyzer
	source ~soft_bio_267/initializes/init_anaconda
	export PATH=$scripts_path:$PATH	
	awk '{ if ($3 >= $combined_score) print $1 "\t" $2 "\t" $3}' $string_network | tail -n +2 > string_sure_conn.txt
	LAYERS='gene,[A-Za-z0-9]'
	NetAnalyzer.rb -i string_sure_conn.txt -l $LAYERS -A 'get_degree,get_degreeZ' -o out
	awk '{ if ($2 >= $hub_zscore) print $1 }' node_attributes.txt > computed_hub_nodes
	intersect_columns.rb -a computed_hub_nodes -b $white_list -k a > hub_nodes
	grep -v -w -F -f hub_nodes string_sure_conn.txt > filtered_string.txt
	?
	clusterORPHA_to_clusterGEN.rb -i cohort_analysis)/temp/"$similarity_measure"_clusters.txt -t $disease_gene_file -o raw_clustered_genes.txt -m $min_group -F $gene_filter
	cut -f 2 raw_clustered_genes.txt | sort -u > gene_list

	Gene-specific_connectome.py filtered_string.txt gene_list rankings > log
	parse_hgc.rb -f "rankings/*.txt" -o all_paths  -g gene_list
	parse_hgc.rb -i all_paths -g raw_clustered_genes.txt -o expanded_clusters -s stats_by_cluster.txt | grep 'node id' > missing_genes.txt

	sort -k2 -n stats_by_cluster.txt | grep -v -w NaN > filtered_stats_by_cluster.txt
	cut -f 1 filtered_stats_by_cluster.txt > connected_clusters.txt
	grep -w -F -f connected_clusters.txt raw_clustered_genes.txt > connected_raw_clusters
	grep -w -F -f connected_clusters.txt expanded_clusters > connected_expand_clusters
	cut -d ' ' missing_genes.txt -f 1,6 | tr ' ' '\t' | aggregate_column_data.rb -i - -x 0 -a 1 > missing_genes_table.txt

	if [ ! -s raw_clustered_genes.txt ] || [ ! -s expanded_clusters ]; then
		>&2 echo "Clustering has failed"
		exit 1
	fi
}

%clustering_robustness_[1-100]){
	source ~soft_bio_267/initializes/init_pets
	count=`wc -l < $disease_hpo_file`
	records=`echo "tot=$count-1; puts (tot-tot*$robustness_fraction).to_i" | ruby`
	head -n 1 $disease_hpo_file > sample
	tail -n +2 $disease_hpo_file | shuf -n $records >> sample
	?
	coPatReporter.rb -i sample -p HPOID -d DiseaseID -C 20 -m $similarity_measure -o disease_clusters
	source ~soft_bio_267/initializes/init_anaconda
	intersect_columns.rb -a $disease_hpo_file -b cohort_analysis)/temp/"$similarity_measure"_clusters.txt -k a | tail -n +2 | awk '{print $1 "\tnot"}' > ref_clust
	cat cohort_analysis)/temp/"$similarity_measure"_clusters.txt >> ref_clust
	intersect_columns.rb -a $disease_hpo_file -b sample -k a | awk '{print $1 "\tdummy"}' > sample_clust
	intersect_columns.rb -a sample -b temp/"lin"_clusters.txt -k a | tail -n +2 | awk '{print $1 "\tdummy"}' >> sample_clust
	cat temp/"$similarity_measure"_clusters.txt >> sample_clust
	awk '{print $2 "\t" $1}' ref_clust > ref_clust_sort
	awk '{print $2 "\t" $1}' sample_clust > sample_clust_sort
	cdlib_clusterize.py -i generate_clusters)/filtered_string.txt -A ref_clust_sort -B sample_clust_sort > adjusted_mutual_info
}

%benchmark){
	source ~soft_bio_267/initializes/init_netanalyzer
	source ~soft_bio_267/initializes/init_degenes_hunter
	export PATH=$scripts_path:$PATH	
	aggregate_column_data.rb -i generate_clusters)/connected_expand_clusters -x 0 -a 1 > genes_by_cluster.txt
	clusters_to_enrichment.R -i genes_by_cluster.txt -w 1 -k "SYMBOL" -p 0.05 -c -o aRD_gene_clusters -M 'R' -S 0.7 -C 'ancestor' --custom $gmt --gmt_id SYMBOL -f '' -F
	tail -n +2 aRD_gene_clusters_functional_enrichment/enrichment_all.gmt.csv | awk '{print "^"$1}' > selected_clusters
	grep -E -w -f selected_clusters generate_clusters)/distances.txt > filtered_distances
	?
	get_cdf_table.rb -r $gene_ref_list -i filtered_distances -o cdf_table -t 1,5,10,20,30,50,100,150,200,300 -I 1 -S 2
}

%prioritize_clusters_[connected_raw_clusters;connected_expand_clusters]){
	. ~soft_bio_267/initializes/init_crank
	mkdir temp
	cut -f 1,2 generate_clusters)/filtered_string.txt | tr "\t" "\n" | sort -u > temp/string_nodes
	cut -f 1 generate_clusters)/missing_genes_table.txt > temp/missing_genes
	cut -f 2 temp/clusters > temp/cl_genes
	grep -v -F -w -f temp/missing_genes generate_clusters)/(*) | grep -F -w -f temp/string_nodes > temp/clusters
	cat temp/string_nodes temp/cl_genes | sort -u | awk '{print $1 "\t" NR}' > temp/gene_index
	cut -f 1,2 generate_clusters)/filtered_string.txt > temp/crank_string.txt
	standard_name_replacer.rb -i temp/crank_string.txt -I temp/gene_index -c 1,2
	standard_name_replacer.rb -i temp/clusters -I temp/gene_index -c 2
	aggregate_column_data.rb -i temp/clusters_rep -x 0 -a 1 | tr '\t' ' ' | tr ',' ' ' > temp/clustered_genes_AGG.txt
	?
	crank -i:temp/crank_string.txt_rep -c:temp/clustered_genes_AGG.txt -o:crank_metrics.txt

	if [ ! -s crank_metrics.txt ]; then 
		>&2 echo " Cluster prioritization has failed"
		exit 1
	fi
}

%analyze_clusters_[connected_raw_clusters;connected_expand_clusters]){
	source ~soft_bio_267/initializes/init_degenes_hunter
	export PATH=~soft_bio_267/programs/x86_64/scripts:$PATH
	export PATH=$scripts_path:$PATH
	aggregate_column_data.rb -i generate_clusters)/(*) -x 0 -a 1 > genes_by_cluster.txt
	?
	clusters_to_enrichment.R -i genes_by_cluster.txt -w 1 -k "SYMBOL" -p 0.01 -c -o aRD_gene_clusters -M 'PRS' -S 0.7 -C 'ancestor' -F
}

report_data){
	source ~soft_bio_267/initializes/init_R
	source ~soft_bio_267/initializes/init_report_html
	export PATH=$scripts_path:$PATH	
	plot_density.R -d generate_clusters)/filtered_string.txt -x V3 -X 'STRING combined score' -o combined_score_dist -H
	plot_density.R -d generate_clusters)/node_attributes.txt -x V3 -X Degree -o degree -H
	plot_density.R -d generate_clusters)/gene_stats.txt -x freq -X 'Number of ocurrences' -o gene_stats
	#Scatterplots:
	combine_files.rb -i generate_clusters)/filtered_stats_by_cluster.txt -f generate_clusters)/connected_raw_clusters -g $disease_gene_file -d cohort_analysis)/temp/"$similarity_measure"_clusters.txt -o raw_cluster_size_ASP.txt
	#disPerClust => diseases_per_cluster (cuantas enf. del cluster presentan al menos 1 gen asociado)
	#clusterSize => genes per cluster
	x_y_graph.R -d raw_cluster_size_ASP.txt -x clusterSize -y aspValue -z diseasePerCluster -X 'Genes by cluster' -Y 'ASP value' -Z '' -o raw_cluster_size_ASP_dist 
	combine_files.rb -i generate_clusters)/filtered_stats_by_cluster.txt -f generate_clusters)/connected_expand_clusters -g $disease_gene_file -d cohort_analysis)/temp/"$similarity_measure"_clusters.txt -o expanded_cluster_size_ASP.txt
	x_y_graph.R -d expanded_cluster_size_ASP.txt -x clusterSize -y aspValue -z diseasePerCluster -X 'Genes by cluster' -Y 'ASP value' -Z '' -o expanded_cluster_size_ASP_dist 
	merge_tabular.rb !prioritize_clusters_!/crank_metrics.txt > metric_table
	cat !clustering_robustness_!/adjusted_mutual_info > adjusted_mutual_info
	plot_density.R -d adjusted_mutual_info -x V1 -X 'Adjusted mutual information' -o adj_mut_inf -H
	echo -e '\traw\texpanded' > canvas_table
	tail -n +2 metric_table |cut -f 1,2,6 | grep -v '-' | sort -r -k 2,2 -n | awk '{print "cl" $0}' >> canvas_table
	mkdir raw_enrichment
	ln -s analyze_clusters_connected_raw_clusters)/aRD_gene_clusters_functional_enrichment/*.png raw_enrichment/
	mkdir expand_enrichment
	ln -s analyze_clusters_connected_expand_clusters)/aRD_gene_clusters_functional_enrichment/*.png expand_enrichment/
	rm -rf copat; mkdir copat
	ln -s cohort_analysis)/temp/"$similarity_measure"_heatmap.png copat/clustering_heatmap.png
	?
	report_html -t $report_template -d canvas_table,benchmark)/cdf_table -o cluster_report
	parse_table_info.rb -i $disease_mondo_genes -f $disease_hpo_file -c cohort_analysis)/temp/"$similarity_measure"_clusters.txt -d $phenotype_annotation -o full_info_table.txt
	tail -n +2 full_info_table.txt | awk -F "\t" '{print "cl" $3 "\t" $2 "\t" $4}' > net_tab
	table2cyt.rb -i net_tab -o net -c 0,1,2 -t 'cl,dis,gene'
	aggregate_column_data.rb -i generate_clusters)/raw_clustered_genes.txt -x 0 -a 1 > genes_by_cluster_ALL.txt
	echo -e "Cluster_id\tASP_value\tAssociated_genes_by_MONDO\tASP_expanded_genes" > cluster_table.txt
	merge_tabular.rb generate_clusters)/stats_by_cluster.txt genes_by_cluster_ALL.txt analyze_clusters_connected_expand_clusters)/genes_by_cluster.txt | sed 's/None/-/g' >> cluster_table.txt
	cp full_info_table.txt full_info_table_withNOphen.txt
	sort -u $disease_gene_file > genes
	aggregate_column_data.rb -i genes -x 0 -a 1 > genes_agg
	cut -f 1 full_info_table.txt | grep -v -w -F -f - genes_agg | awk '{print $1 "\t-\t-\t" $2 "\t-"}' >> full_info_table_withNOphen.txt
	merge_tabular.rb full_info_table_withNOphen.txt $all_diseases > full_info_table_withNOphenNOinfo.txt
}
